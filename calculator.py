# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.0b3 on Thu Feb 22 19:18:39 2018
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class CalcPanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CalcPanel.__init__
        kwds["style"] = kwds.get("style", 0) | wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.tctrl_calc_in = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_RIGHT)
        self.btn_ca = wx.Button(self, wx.ID_ANY, "CA")
        self.btn_div = wx.Button(self, wx.ID_ANY, "/")
        self.btn_mult = wx.Button(self, wx.ID_ANY, "*")
        self.btn_sub = wx.Button(self, wx.ID_ANY, "-")
        self.btn_seven = wx.Button(self, wx.ID_ANY, "7")
        self.btn_eight = wx.Button(self, wx.ID_ANY, "8")
        self.btn_nine = wx.Button(self, wx.ID_ANY, "9")
        self.btn_add = wx.Button(self, wx.ID_ANY, "+")
        self.btn_four = wx.Button(self, wx.ID_ANY, "4")
        self.btn_five = wx.Button(self, wx.ID_ANY, "5")
        self.btn_six = wx.Button(self, wx.ID_ANY, "6")
        self.btn_pow = wx.Button(self, wx.ID_ANY, "power (**)")
        self.btn_one = wx.Button(self, wx.ID_ANY, "1")
        self.btn_two = wx.Button(self, wx.ID_ANY, "2")
        self.btn_three = wx.Button(self, wx.ID_ANY, "3")
        self.btn_sqrt = wx.Button(self, wx.ID_ANY, "sqrt")
        self.btn_brackets = wx.Button(self, wx.ID_ANY, "( ... )")
        self.btn_zero = wx.Button(self, wx.ID_ANY, "0")
        self.btn_comma = wx.Button(self, wx.ID_ANY, ",")
        self.btn_equals = wx.Button(self, wx.ID_ANY, "=")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: CalcPanel.__set_properties
        self.tctrl_calc_in.SetFont(wx.Font(14, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.btn_ca.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.btn_ca.SetToolTip("clears the field")
        self.btn_pow.SetToolTip("adds the power symbol to the expression")
        self.btn_sqrt.SetToolTip("adds the square root function to the expression with x and y as placeholder")
        self.btn_brackets.SetToolTip("adds a opening and closing bracket to the expression")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CalcPanel.__do_layout
        grid_sizer_1 = wx.GridBagSizer(4, 4)
        grid_sizer_1.Add(self.tctrl_calc_in, (0, 0), (1, 4), wx.ALL | wx.EXPAND, 4)
        grid_sizer_1.Add(self.btn_ca, (1, 0), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_div, (1, 1), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_mult, (1, 2), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_sub, (1, 3), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_seven, (2, 0), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_eight, (2, 1), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_nine, (2, 2), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_add, (2, 3), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_four, (3, 0), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_five, (3, 1), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_six, (3, 2), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_pow, (3, 3), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_one, (4, 0), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_two, (4, 1), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_three, (4, 2), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_sqrt, (4, 3), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_brackets, (5, 0), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_zero, (5, 1), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_comma, (5, 2), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        grid_sizer_1.Add(self.btn_equals, (5, 3), (1, 1), wx.ALIGN_CENTER | wx.EXPAND, 0)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.Fit(self)
        grid_sizer_1.AddGrowableRow(0)
        grid_sizer_1.AddGrowableRow(1)
        grid_sizer_1.AddGrowableRow(2)
        grid_sizer_1.AddGrowableRow(3)
        grid_sizer_1.AddGrowableRow(4)
        grid_sizer_1.AddGrowableRow(5)
        grid_sizer_1.AddGrowableCol(0)
        grid_sizer_1.AddGrowableCol(1)
        grid_sizer_1.AddGrowableCol(2)
        grid_sizer_1.AddGrowableCol(3)
        self.Layout()
        # end wxGlade

# end of class CalcPanel

class ConvPanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ConvPanel.__init__
        kwds["style"] = kwds.get("style", 0) | wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.nb_converter = wx.Notebook(self, wx.ID_ANY, style=wx.NB_BOTTOM)
        self.nb_conv_currency = wx.Panel(self.nb_converter, wx.ID_ANY)
        self.cmb_curr_a = wx.ComboBox(self.nb_conv_currency, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.tctrl_curr_a = wx.TextCtrl(self.nb_conv_currency, wx.ID_ANY, "0.0", style=wx.TE_RIGHT)
        self.cmb_curr_b = wx.ComboBox(self.nb_conv_currency, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.tctrl_curr_b = wx.TextCtrl(self.nb_conv_currency, wx.ID_ANY, "0.0", style=wx.TE_RIGHT)
        self.tctrl_exchange = wx.TextCtrl(self.nb_conv_currency, wx.ID_ANY, "0.00", style=wx.TE_READONLY | wx.TE_RIGHT)
        self.btn_refresh = wx.BitmapButton(self.nb_conv_currency, wx.ID_ANY, wx.Bitmap("/home/dan/PycharmProjects/Calculator/wx/sync.png", wx.BITMAP_TYPE_ANY))
        self.btn_convert = wx.Button(self.nb_conv_currency, wx.ID_ANY, "Refresh")
        self.nb_conv_distance = wx.Panel(self.nb_converter, wx.ID_ANY)
        self.cmb_dist_a = wx.ComboBox(self.nb_conv_distance, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.tctrl_dist_a = wx.TextCtrl(self.nb_conv_distance, wx.ID_ANY, "0.0", style=wx.TE_RIGHT)
        self.cmb_dist_b = wx.ComboBox(self.nb_conv_distance, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.tctrl_dist_b = wx.TextCtrl(self.nb_conv_distance, wx.ID_ANY, "0.0", style=wx.TE_RIGHT)
        self.nb_conv_speed = wx.Panel(self.nb_converter, wx.ID_ANY)
        self.cmb_speed_a = wx.ComboBox(self.nb_conv_speed, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.tctrl_speed_a = wx.TextCtrl(self.nb_conv_speed, wx.ID_ANY, "0.0", style=wx.TE_RIGHT)
        self.cmb_speed_b = wx.ComboBox(self.nb_conv_speed, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.tctrl_speed_b = wx.TextCtrl(self.nb_conv_speed, wx.ID_ANY, "0.0", style=wx.TE_RIGHT)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ConvPanel.__set_properties
        self.Hide()
        self.btn_refresh.SetToolTip("Trys to refresch the exchange values of all supported currencies")
        self.btn_refresh.SetSize(self.btn_refresh.GetBestSize())
        self.btn_convert.SetToolTip("Converts (A) currency value to (B) currency")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ConvPanel.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_4 = wx.GridBagSizer(4, 4)
        grid_sizer_3 = wx.GridBagSizer(4, 4)
        grid_sizer_2 = wx.GridBagSizer(4, 4)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        lbl_curr_a = wx.StaticText(self.nb_conv_currency, wx.ID_ANY, "Currency (A)")
        grid_sizer_2.Add(lbl_curr_a, (0, 0), (1, 1), wx.ALIGN_CENTER | wx.LEFT | wx.TOP, 4)
        grid_sizer_2.Add(self.cmb_curr_a, (0, 1), (1, 1), wx.ALIGN_CENTER | wx.TOP, 4)
        grid_sizer_2.Add(self.tctrl_curr_a, (0, 2), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND | wx.RIGHT | wx.TOP, 4)
        lbl_curr_b = wx.StaticText(self.nb_conv_currency, wx.ID_ANY, "Currency (B)")
        grid_sizer_2.Add(lbl_curr_b, (1, 0), (1, 1), wx.ALIGN_CENTER | wx.LEFT, 4)
        grid_sizer_2.Add(self.cmb_curr_b, (1, 1), (1, 1), wx.ALIGN_CENTER, 0)
        grid_sizer_2.Add(self.tctrl_curr_b, (1, 2), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND | wx.RIGHT, 4)
        lbl_exchange = wx.StaticText(self.nb_conv_currency, wx.ID_ANY, "Exchange Rate")
        grid_sizer_2.Add(lbl_exchange, (2, 0), (1, 1), wx.ALIGN_CENTER | wx.BOTTOM | wx.LEFT, 4)
        grid_sizer_2.Add(self.tctrl_exchange, (2, 1), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND, 4)
        sizer_3.Add(self.btn_refresh, 0, wx.ALIGN_CENTER | wx.RIGHT, 8)
        sizer_3.Add(self.btn_convert, 0, wx.ALIGN_CENTER | wx.LEFT, 8)
        grid_sizer_2.Add(sizer_3, (2, 2), (1, 1), wx.ALIGN_CENTER | wx.BOTTOM | wx.EXPAND | wx.RIGHT, 4)
        self.nb_conv_currency.SetSizer(grid_sizer_2)
        grid_sizer_2.AddGrowableCol(2)
        lbl_dist_a = wx.StaticText(self.nb_conv_distance, wx.ID_ANY, "Distance (A)")
        grid_sizer_3.Add(lbl_dist_a, (0, 0), (1, 1), wx.ALIGN_CENTER | wx.LEFT | wx.TOP, 4)
        grid_sizer_3.Add(self.cmb_dist_a, (0, 1), (1, 1), wx.ALIGN_CENTER | wx.TOP, 4)
        grid_sizer_3.Add(self.tctrl_dist_a, (0, 2), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND | wx.RIGHT | wx.TOP, 4)
        lbl_dist_b = wx.StaticText(self.nb_conv_distance, wx.ID_ANY, "Distance (B)")
        grid_sizer_3.Add(lbl_dist_b, (1, 0), (1, 1), wx.ALIGN_CENTER | wx.BOTTOM | wx.LEFT, 4)
        grid_sizer_3.Add(self.cmb_dist_b, (1, 1), (1, 1), wx.ALIGN_CENTER | wx.BOTTOM, 4)
        grid_sizer_3.Add(self.tctrl_dist_b, (1, 2), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND | wx.RIGHT, 4)
        self.nb_conv_distance.SetSizer(grid_sizer_3)
        grid_sizer_3.AddGrowableCol(2)
        lbl_speed_a = wx.StaticText(self.nb_conv_speed, wx.ID_ANY, "Speed (A)")
        grid_sizer_4.Add(lbl_speed_a, (0, 0), (1, 1), wx.ALIGN_CENTER | wx.LEFT | wx.TOP, 4)
        grid_sizer_4.Add(self.cmb_speed_a, (0, 1), (1, 1), wx.ALIGN_CENTER | wx.TOP, 4)
        grid_sizer_4.Add(self.tctrl_speed_a, (0, 2), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.EXPAND | wx.RIGHT | wx.TOP, 4)
        lbl_speed_b = wx.StaticText(self.nb_conv_speed, wx.ID_ANY, "Speed (B)")
        grid_sizer_4.Add(lbl_speed_b, (1, 0), (1, 1), wx.ALIGN_CENTER | wx.BOTTOM | wx.LEFT, 4)
        grid_sizer_4.Add(self.cmb_speed_b, (1, 1), (1, 1), wx.ALIGN_CENTER | wx.BOTTOM, 4)
        grid_sizer_4.Add(self.tctrl_speed_b, (1, 2), (1, 1), wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.EXPAND | wx.RIGHT, 4)
        self.nb_conv_speed.SetSizer(grid_sizer_4)
        grid_sizer_4.AddGrowableCol(2)
        self.nb_converter.AddPage(self.nb_conv_currency, "Currency")
        self.nb_converter.AddPage(self.nb_conv_distance, "Distance")
        self.nb_converter.AddPage(self.nb_conv_speed, "Speed")
        sizer_1.Add(self.nb_converter, 1, wx.EXPAND | wx.TOP, 4)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class ConvPanel

class CalcMainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CalcMainFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE | wx.TAB_TRAVERSAL
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        
        # Menu Bar
        self.mb_main = wx.MenuBar()
        self.mm_calc = wx.Menu()
        ms_calc_sub = wx.Menu()
        self.mb_main.mi_calc = ms_calc_sub.Append(wx.ID_ANY, "Calculator\tCTRL-SHIFT-C", "Swaps window content to a calculator")
        self.mb_main.mi_conv = ms_calc_sub.Append(wx.ID_ANY, "Converter\tCTRL-SHIFT-V", "Swaps window content to a converter")
        self.mm_calc.Append(wx.ID_ANY, "MyMenu", ms_calc_sub, "")
        self.mm_calc.AppendSeparator()
        self.mb_main.mi_quit = self.mm_calc.Append(wx.ID_ANY, "Quit\tCTRL-Q", "Closes the Calculator")
        self.mb_main.Append(self.mm_calc, "Calculator")
        self.mm_about = wx.Menu()
        self.mb_main.mi_about = self.mm_about.Append(wx.ID_ANY, "About\tF1", "")
        self.mb_main.Append(self.mm_about, "About")
        self.SetMenuBar(self.mb_main)
        # Menu Bar end
        self.calc_panel = CalcPanel(self, wx.ID_ANY)
        self.conv_panel = ConvPanel(self, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: CalcMainFrame.__set_properties
        self.SetTitle("wxCalculator")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap("/home/dan/PycharmProjects/Calculator/wx/calculator.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CalcMainFrame.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.calc_panel, 1, wx.ALL | wx.EXPAND, 2)
        sizer_2.Add(self.conv_panel, 1, wx.ALL | wx.EXPAND, 2)
        self.SetSizer(sizer_2)
        self.Layout()
        self.Centre()
        # end wxGlade

# end of class CalcMainFrame
